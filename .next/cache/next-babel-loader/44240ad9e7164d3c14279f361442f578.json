{"ast":null,"code":"var _jsxFileName = \"/media/matheus-oliveira/Data/Projects/ReactJs/quiz/src/pages/quiz/index.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport Router from 'next/router';\nimport axios from 'axios';\nimport useUSer from '../../utils/useUser';\nimport Question from '../../components/Question';\nimport Results from '../../components/Results';\n\nconst Quiz = ({\n  quiz\n}) => {\n  const {\n    0: quizQuestion,\n    1: setQuizQuestion\n  } = useState([{\n    question: '',\n    answers: {\n      answer_a_correct: \"\",\n      answer_b: \"\",\n      answer_c: \"\",\n      answer_d: \"\",\n      answer_e: \"\",\n      answer_f: \"\"\n    },\n    correct_answers: {\n      answer_a: \"\",\n      answer_b: \"\",\n      answer_c: \"\",\n      answer_d: \"\",\n      answer_e: \"\",\n      answer_f: \"\"\n    }\n  }]);\n  const {\n    0: countQuestion,\n    1: setCountQuestion\n  } = useState(0);\n  const {\n    0: showResults,\n    1: setShowResults\n  } = useState(false);\n  const {\n    user\n  } = useUSer();\n  useEffect(() => {\n    if (!user.name) {\n      return Router.push('/home');\n    }\n\n    ;\n    const newQuiz = quiz.map((quiz, index) => {\n      if (index < user.dificulty) {\n        const newAnsers = [{\n          id: 1,\n          quest: quiz.answers.answer_a\n        }, {\n          id: 2,\n          quest: quiz.answers.answer_b\n        }, {\n          id: 3,\n          quest: quiz.answers.answer_c\n        }, {\n          id: 4,\n          quest: quiz.answers.answer_d\n        }, {\n          id: 5,\n          quest: quiz.answers.answer_e\n        }, {\n          id: 6,\n          quest: quiz.answers.answer_f\n        }].filter(answer => answer.quest !== null);\n        return {\n          question: quiz.question,\n          answers: newAnsers,\n          correct_answers: quiz.correct_answers\n        };\n      }\n\n      ;\n    }).filter(quiz => quiz !== undefined);\n    return setQuizQuestion(newQuiz);\n  }, [user]);\n\n  const handleNextQuest = () => {\n    countQuestion < quizQuestion.length - 1 ? setCountQuestion(prevState => prevState + 1) : setShowResults(true);\n  };\n\n  return __jsx(React.Fragment, null, console.log(quiz), !showResults ? __jsx(Question, {\n    countQuestion: countQuestion,\n    question: quizQuestion[countQuestion].question,\n    answers: [quizQuestion[countQuestion].answers] // correct_answers={quizQuestion[countQuestion].correct_answers}\n    ,\n    nextQuestion: handleNextQuest,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 11\n    }\n  }) : __jsx(Results, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 11\n    }\n  }), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport async function getStaticProps() {\n  const {\n    data\n  } = await axios.get('https://quizapi.io/api/v1/questions', {\n    headers: {\n      'X-Api-Key': process.env.tokenAPI\n    }\n  });\n  const newQuiz = data.map(quiz => {\n    return {\n      id: quiz.id,\n      question: quiz.question,\n      answers: [{\n        id: 1,\n        quest: quiz.answers.answer_a\n      }, {\n        id: 2,\n        quest: quiz.answers.answer_b\n      }, {\n        id: 3,\n        quest: quiz.answers.answer_c\n      }, {\n        id: 4,\n        quest: quiz.answers.answer_d\n      }, {\n        id: 5,\n        quest: quiz.answers.answer_e\n      }, {\n        id: 6,\n        quest: quiz.answers.answer_f\n      }].filter(answer => answer.quest !== null),\n      correct_answers: [{\n        id: 1,\n        quest: quiz.correct_answers.answer_a_correct\n      }, {\n        id: 2,\n        quest: quiz.correct_answers.answer_b_correct\n      }, {\n        id: 3,\n        quest: quiz.correct_answers.answer_c_correct\n      }, {\n        id: 4,\n        quest: quiz.correct_answers.answer_d_correct\n      }, {\n        id: 5,\n        quest: quiz.correct_answers.answer_e_correct\n      }, {\n        id: 6,\n        quest: quiz.answers.answer_f_correct\n      }].filter(answer => answer.quest !== null),\n      multiple_correct_answers: quiz.multiple_correct_answers\n    };\n  });\n  const quiz = data;\n  return {\n    props: {\n      quiz\n    }\n  };\n}\n;\nexport default Quiz;","map":{"version":3,"sources":["/media/matheus-oliveira/Data/Projects/ReactJs/quiz/src/pages/quiz/index.js"],"names":["React","useState","useEffect","Router","axios","useUSer","Question","Results","Quiz","quiz","quizQuestion","setQuizQuestion","question","answers","answer_a_correct","answer_b","answer_c","answer_d","answer_e","answer_f","correct_answers","answer_a","countQuestion","setCountQuestion","showResults","setShowResults","user","name","push","newQuiz","map","index","dificulty","newAnsers","id","quest","filter","answer","undefined","handleNextQuest","length","prevState","console","log","getStaticProps","data","get","headers","process","env","tokenAPI","answer_b_correct","answer_c_correct","answer_d_correct","answer_e_correct","answer_f_correct","multiple_correct_answers","props"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Router from 'next/router';\nimport axios from 'axios';\n\nimport useUSer from '../../utils/useUser';\n\nimport Question from '../../components/Question';\nimport Results from '../../components/Results';\n\n\n\nconst Quiz = ({ quiz }) => {\n  const [quizQuestion, setQuizQuestion] = useState([{\n\n    question: '',\n    answers: {\n      answer_a_correct: \"\",\n      answer_b: \"\",\n      answer_c: \"\",\n      answer_d: \"\",\n      answer_e: \"\",\n      answer_f: \"\",\n    },\n    correct_answers: {\n      answer_a: \"\",\n      answer_b: \"\",\n      answer_c: \"\",\n      answer_d: \"\",\n      answer_e: \"\",\n      answer_f: \"\",\n    }\n  }]);\n\n  const [countQuestion, setCountQuestion] = useState(0);\n  const [showResults, setShowResults] = useState(false);\n\n  const { user } = useUSer();\n\n  useEffect(() => {\n\n    if (!user.name) {\n\n      return Router.push('/home');\n\n    };\n\n    const newQuiz = quiz.map((quiz, index) => {\n\n      if (index < user.dificulty) {\n\n        const newAnsers = [\n          {\n            id: 1,\n            quest: quiz.answers.answer_a\n          },\n          {\n            id: 2,\n            quest: quiz.answers.answer_b\n          },\n          {\n            id: 3,\n            quest: quiz.answers.answer_c\n          },\n          {\n            id: 4,\n            quest: quiz.answers.answer_d\n          },\n          {\n            id: 5,\n            quest: quiz.answers.answer_e\n          },\n          {\n            id: 6,\n            quest: quiz.answers.answer_f\n          },\n        ].filter(answer => answer.quest !== null);\n\n\n        return {\n\n          question: quiz.question,\n          answers: newAnsers,\n          correct_answers: quiz.correct_answers\n\n        };\n      };\n\n    }).filter(quiz => quiz !== undefined);\n\n    return setQuizQuestion(newQuiz);\n\n\n  }, [user]);\n\n  const handleNextQuest = () => {\n\n\n    countQuestion < quizQuestion.length - 1\n\n      ?\n\n      (\n        setCountQuestion(prevState => prevState + 1)\n      )\n\n      :\n\n      (\n        setShowResults(true)\n      )\n\n\n  };\n\n  return (\n    <>\n      {console.log(quiz)}\n\n      {!showResults\n        ?\n        (\n\n          <Question\n            countQuestion={countQuestion}\n            question={quizQuestion[countQuestion].question}\n            answers={[quizQuestion[countQuestion].answers]}\n            // correct_answers={quizQuestion[countQuestion].correct_answers}\n            nextQuestion={handleNextQuest}\n          />\n\n        )\n        :\n        (\n\n          <Results />\n\n        )\n      }\n\n\n\n\n      <div >\n\n\n\n      </div>\n\n    </>\n  );\n};\n\nexport async function getStaticProps() {\n\n\n  const { data } = await axios.get('https://quizapi.io/api/v1/questions', {\n\n\n    headers: { 'X-Api-Key': process.env.tokenAPI },\n\n\n  });\n\n  const newQuiz = data.map(quiz => {\n\n    return {\n\n      id: quiz.id,\n      question: quiz.question,\n      answers: [\n        {\n          id: 1,\n          quest: quiz.answers.answer_a,\n        },\n        {\n          id: 2,\n          quest: quiz.answers.answer_b,\n        },\n        {\n          id: 3,\n          quest: quiz.answers.answer_c,\n        },\n        {\n          id: 4,\n          quest: quiz.answers.answer_d,\n        },\n        {\n          id: 5,\n          quest: quiz.answers.answer_e,\n        },\n        {\n          id: 6,\n          quest: quiz.answers.answer_f,\n        },\n      ].filter(answer => answer.quest !== null),\n\n      correct_answers: [\n        {\n          id: 1,\n          quest: quiz.correct_answers.answer_a_correct,\n        },\n        {\n          id: 2,\n          quest: quiz.correct_answers.answer_b_correct,\n        },\n        {\n          id: 3,\n          quest: quiz.correct_answers.answer_c_correct,\n        },\n        {\n          id: 4,\n          quest: quiz.correct_answers.answer_d_correct,\n        },\n        {\n          id: 5,\n          quest: quiz.correct_answers.answer_e_correct,\n        },\n        {\n          id: 6,\n          quest: quiz.answers.answer_f_correct,\n        },\n      ].filter(answer => answer.quest !== null),\n      multiple_correct_answers: quiz.multiple_correct_answers,\n\n    }\n  });\n\n\n\n  const quiz = data;\n\n  return { props: { quiz } };\n};\n\nexport default Quiz;"]},"metadata":{},"sourceType":"module"}