{"ast":null,"code":"var _jsxFileName = \"/media/matheus-oliveira/Data/Projects/ReactJs/quiz/src/pages/quiz/index.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport Router from 'next/router';\nimport axios from 'axios';\nimport useUSer from '../../utils/useUser';\nimport Question from '../../components/Question';\n\nconst Quiz = ({\n  quiz\n}) => {\n  const {\n    0: quizQuestion,\n    1: setQuizQuestion\n  } = useState();\n  const {\n    user\n  } = useUSer();\n  useEffect(() => {\n    if (!user.name) {\n      Router.push('/home');\n    }\n\n    ;\n    const newQuiz = quiz.map((quiz, index) => {\n      if (index < user.dificulty) {\n        const newQuiz = {\n          question: quiz.question,\n          answers: quiz.answers,\n          correct_answers: quiz.correct_answers\n        };\n        return newQuiz;\n      }\n\n      ;\n    }).filter(el => el !== undefined);\n    console.log(newQuiz);\n  }, [user.name]);\n  return __jsx(React.Fragment, null, console.log(quiz), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, quiz.map((quiz, index) => {\n    if (index < user.dificulty) {\n      return __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 15\n        }\n      }, __jsx(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 17\n        }\n      }, quiz.question), __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 17\n        }\n      }, quiz.answers.answer_a), __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 17\n        }\n      }, quiz.answers.answer_b), __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 17\n        }\n      }, quiz.answers.answer_c), __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 17\n        }\n      }, quiz.answers.answer_d), __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 17\n        }\n      }, quiz.answers.answer_e), __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 17\n        }\n      }, quiz.answers.answer_f), __jsx(\"hr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 17\n        }\n      }));\n    }\n  }), __jsx(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport async function getStaticProps() {\n  const result = await axios.get('https://quizapi.io/api/v1/questions', {\n    headers: {\n      'X-Api-Key': process.env.tokenAPI\n    }\n  });\n  const quiz = result.data;\n  return {\n    props: {\n      quiz\n    }\n  };\n}\n;\nexport default Quiz;","map":{"version":3,"sources":["/media/matheus-oliveira/Data/Projects/ReactJs/quiz/src/pages/quiz/index.js"],"names":["React","useState","useEffect","Router","axios","useUSer","Question","Quiz","quiz","quizQuestion","setQuizQuestion","user","name","push","newQuiz","map","index","dificulty","question","answers","correct_answers","filter","el","undefined","console","log","answer_a","answer_b","answer_c","answer_d","answer_e","answer_f","getStaticProps","result","get","headers","process","env","tokenAPI","data","props"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Router from 'next/router';\nimport axios from 'axios';\n\nimport useUSer from '../../utils/useUser';\n\nimport Question from '../../components/Question';\n\n\n\nconst Quiz = ({ quiz }) => {\n  const [quizQuestion, setQuizQuestion] = useState();\n\n  const { user } = useUSer();\n\n  useEffect(() => {\n\n    if (!user.name) {\n\n      Router.push('/home');\n\n    };\n\n    const newQuiz = quiz.map((quiz, index) => {\n\n      if (index < user.dificulty) {\n\n        const newQuiz = {\n\n          question: quiz.question,\n          answers: quiz.answers,\n          correct_answers: quiz.correct_answers\n\n        };\n        return newQuiz;\n      };\n\n\n\n    }).filter(el => el !== undefined);\n\n    console.log(newQuiz);\n\n\n  }, [user.name]);\n\n  return (\n    <>\n      {console.log(quiz)}\n\n      {/* \n      <Question\n\n        question={}\n        answers={}\n        correct_answers={}\n      /> */}\n\n\n\n      <div >\n\n        {/* <h1>{quiz[1].question}</h1>\n        <p>{quiz[1].answers.answer_a}</p>\n        <p>{quiz[1].answers.answer_b}</p>\n        <p>{quiz[1].answers.answer_c}</p>\n        <p>{quiz[1].answers.answer_d}</p>\n        <p>{quiz[1].answers.answer_e}</p>\n        <p>{quiz[1].answers.answer_f}</p> */}\n\n        {quiz.map((quiz, index) => {\n\n          if (index < user.dificulty) {\n            return (\n              <div>\n                <h1>{quiz.question}</h1>\n                <p>{quiz.answers.answer_a}</p>\n                <p>{quiz.answers.answer_b}</p>\n                <p>{quiz.answers.answer_c}</p>\n                <p>{quiz.answers.answer_d}</p>\n                <p>{quiz.answers.answer_e}</p>\n                <p>{quiz.answers.answer_f}</p>\n                <hr />\n              </div>\n            )\n          }\n        })}\n        <hr />\n      </div>\n\n    </>\n  );\n};\n\nexport async function getStaticProps() {\n\n\n  const result = await axios.get('https://quizapi.io/api/v1/questions', {\n\n\n    headers: { 'X-Api-Key': process.env.tokenAPI },\n\n\n\n  });\n\n  const quiz = result.data;\n\n  return { props: { quiz } };\n};\n\nexport default Quiz;"]},"metadata":{},"sourceType":"module"}