{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/media/matheus-oliveira/Data/Projects/ReactJs/quiz/src/components/Question/index.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { QuestionWrapper, Text } from './styles';\n\nvar Question = function Question(_ref) {\n  _s();\n\n  var question = _ref.question,\n      answers = _ref.answers,\n      nextQuestion = _ref.nextQuestion,\n      countQuestion = _ref.countQuestion;\n\n  var _useState = useState([answer_a, answer_b, answer_c, answer_d, answer_e, answer_f]),\n      answersQuestion = _useState[0],\n      setAnswersQuestion = _useState[1];\n\n  console.log(answers);\n  var answer_a = answers.answer_a,\n      answer_b = answers.answer_b,\n      answer_c = answers.answer_c,\n      answer_d = answers.answer_d,\n      answer_e = answers.answer_e,\n      answer_f = answers.answer_f;\n  return __jsx(QuestionWrapper, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, __jsx(Text, {\n    count: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, \"Question: \", countQuestion + 1), __jsx(Text, {\n    quest: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, question), answer_a && __jsx(Text, {\n    answer: true,\n    onClick: function onClick() {\n      return console.log(answer_a);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 20\n    }\n  }, answer_a), answer_b && __jsx(Text, {\n    answer: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 20\n    }\n  }, answer_b), answer_c && __jsx(Text, {\n    answer: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 20\n    }\n  }, answer_c), answer_d && __jsx(Text, {\n    answer: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 20\n    }\n  }, answer_d), answer_e && __jsx(Text, {\n    answer: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 20\n    }\n  }, answer_e), answer_f && __jsx(Text, {\n    answer: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 20\n    }\n  }, answer_f), __jsx(\"button\", {\n    onClick: nextQuestion,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, \" Next\"));\n};\n\n_s(Question, \"Cgq0NTnsR2xs7VlQDPmCl19rNCA=\");\n\n_c = Question;\nexport default Question;\n\nvar _c;\n\n$RefreshReg$(_c, \"Question\");","map":{"version":3,"sources":["/media/matheus-oliveira/Data/Projects/ReactJs/quiz/src/components/Question/index.js"],"names":["React","useState","QuestionWrapper","Text","Question","question","answers","nextQuestion","countQuestion","answer_a","answer_b","answer_c","answer_d","answer_e","answer_f","answersQuestion","setAnswersQuestion","console","log"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,SAASC,eAAT,EAA0BC,IAA1B,QAAsC,UAAtC;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAAwD;AAAA;;AAAA,MAArDC,QAAqD,QAArDA,QAAqD;AAAA,MAA3CC,OAA2C,QAA3CA,OAA2C;AAAA,MAAlCC,YAAkC,QAAlCA,YAAkC;AAAA,MAApBC,aAAoB,QAApBA,aAAoB;;AAAA,kBAGzBP,QAAQ,CACpD,CAACQ,QAAD,EAAWC,QAAX,EAAqBC,QAArB,EAA+BC,QAA/B,EAAyCC,QAAzC,EAAmDC,QAAnD,CADoD,CAHiB;AAAA,MAGhEC,eAHgE;AAAA,MAG/CC,kBAH+C;;AAOvEC,EAAAA,OAAO,CAACC,GAAR,CAAYZ,OAAZ;AAPuE,MASrEG,QATqE,GAenEH,OAfmE,CASrEG,QATqE;AAAA,MAUrEC,QAVqE,GAenEJ,OAfmE,CAUrEI,QAVqE;AAAA,MAWrEC,QAXqE,GAenEL,OAfmE,CAWrEK,QAXqE;AAAA,MAYrEC,QAZqE,GAenEN,OAfmE,CAYrEM,QAZqE;AAAA,MAarEC,QAbqE,GAenEP,OAfmE,CAarEO,QAbqE;AAAA,MAcrEC,QAdqE,GAenER,OAfmE,CAcrEQ,QAdqE;AAgBvE,SAGE,MAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,KAAK,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAuBN,aAAa,GAAG,CAAvC,CADF,EAGE,MAAC,IAAD;AAAM,IAAA,KAAK,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAaH,QAAb,CAHF,EAKGI,QAAQ,IAAI,MAAC,IAAD;AAAM,IAAA,MAAM,MAAZ;AAAa,IAAA,OAAO,EAAE;AAAA,aAAMQ,OAAO,CAACC,GAAR,CAAYT,QAAZ,CAAN;AAAA,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoDA,QAApD,CALf,EAOGC,QAAQ,IAAI,MAAC,IAAD;AAAM,IAAA,MAAM,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAcA,QAAd,CAPf,EASGC,QAAQ,IAAI,MAAC,IAAD;AAAM,IAAA,MAAM,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAcA,QAAd,CATf,EAWGC,QAAQ,IAAI,MAAC,IAAD;AAAM,IAAA,MAAM,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAcA,QAAd,CAXf,EAaGC,QAAQ,IAAI,MAAC,IAAD;AAAM,IAAA,MAAM,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAcA,QAAd,CAbf,EAeGC,QAAQ,IAAI,MAAC,IAAD;AAAM,IAAA,MAAM,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAcA,QAAd,CAff,EAkBE;AAAQ,IAAA,OAAO,EAAEP,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAlBF,CAHF;AA4BD,CA5CD;;GAAMH,Q;;KAAAA,Q;AA8CN,eAAeA,QAAf","sourcesContent":["import React, { useState } from 'react';\n\nimport { QuestionWrapper, Text } from './styles';\n\nconst Question = ({ question, answers, nextQuestion, countQuestion }) => {\n\n\n  const [answersQuestion, setAnswersQuestion] = useState(\n    [answer_a, answer_b, answer_c, answer_d, answer_e, answer_f,]\n  );\n\n  console.log(answers)\n  const {\n    answer_a,\n    answer_b,\n    answer_c,\n    answer_d,\n    answer_e,\n    answer_f\n  } = answers;\n  return (\n\n\n    <QuestionWrapper>\n      <Text count>Question: {countQuestion + 1}</Text>\n\n      <Text quest>{question}</Text>\n\n      {answer_a && <Text answer onClick={() => console.log(answer_a)}>{answer_a}</Text >}\n\n      {answer_b && <Text answer>{answer_b}</Text >}\n\n      {answer_c && <Text answer>{answer_c}</Text >}\n\n      {answer_d && <Text answer>{answer_d}</Text >}\n\n      {answer_e && <Text answer>{answer_e}</Text >}\n\n      {answer_f && <Text answer>{answer_f}</Text >}\n\n\n      <button onClick={nextQuestion}> Next</button>\n\n\n    </QuestionWrapper>\n\n\n  );\n};\n\nexport default Question;"]},"metadata":{},"sourceType":"module"}