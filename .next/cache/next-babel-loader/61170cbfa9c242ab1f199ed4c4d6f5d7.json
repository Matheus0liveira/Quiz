{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/media/matheus-oliveira/Data/Projects/ReactJs/quiz/src/pages/quiz/index.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport Router from 'next/router';\nimport useUSer from '../../utils/useUser';\nimport Question from '../../components/Question';\n\nvar Quiz = function Quiz(_ref) {\n  _s();\n\n  var quiz = _ref.quiz;\n\n  var _useState = useState([{\n    question: '',\n    answers: {\n      answer_a: \"\",\n      answer_b: \"\",\n      answer_c: \"\",\n      answer_d: \"\",\n      answer_e: \"\",\n      answer_f: \"\"\n    },\n    correct_answers: {\n      answer_a: \"\",\n      answer_b: \"\",\n      answer_c: \"\",\n      answer_d: \"\",\n      answer_e: \"\",\n      answer_f: \"\"\n    }\n  }]),\n      quizQuestion = _useState[0],\n      setQuizQuestion = _useState[1];\n\n  var _useState2 = useState(0),\n      countQuestion = _useState2[0],\n      setCountQuestion = _useState2[1];\n\n  var _useUSer = useUSer(),\n      user = _useUSer.user;\n\n  useEffect(function () {\n    if (!user.name) {\n      return Router.push('/home');\n    }\n\n    ;\n    var newQuiz = quiz.map(function (quiz, index) {\n      if (index < user.dificulty) {\n        return {\n          question: quiz.question,\n          answers: quiz.answers,\n          correct_answers: quiz.correct_answers\n        };\n      }\n\n      ;\n    }).filter(function (quiz) {\n      return quiz !== undefined;\n    });\n    return setQuizQuestion(newQuiz);\n  }, [user]);\n\n  var handleNextQuest = function handleNextQuest() {\n    console.log('Clicked');\n    var maxQuestions = quizQuestion.length - 1;\n\n    if (countQuestion <= maxQuestions) {\n      return setCountQuestion(function (prevState) {\n        return prevState + 1;\n      });\n    }\n\n    ;\n  };\n\n  return __jsx(React.Fragment, null, console.log(quizQuestion), console.log(maxQuestions), __jsx(Question, {\n    question: quizQuestion[countQuestion].question,\n    answers: quizQuestion[countQuestion].answers,\n    correct_answers: quizQuestion[countQuestion].correct_answers,\n    nextQuestion: handleNextQuest,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }));\n};\n\n_s(Quiz, \"WzE7MxtljJKcx3U9eqqRABGoLfc=\", false, function () {\n  return [useUSer];\n});\n\n_c = Quiz;\n;\nexport var __N_SSG = true;\nexport default Quiz;\n\nvar _c;\n\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"sources":["/media/matheus-oliveira/Data/Projects/ReactJs/quiz/src/pages/quiz/index.js"],"names":["React","useState","useEffect","Router","useUSer","Question","Quiz","quiz","question","answers","answer_a","answer_b","answer_c","answer_d","answer_e","answer_f","correct_answers","quizQuestion","setQuizQuestion","countQuestion","setCountQuestion","user","name","push","newQuiz","map","index","dificulty","filter","undefined","handleNextQuest","console","log","maxQuestions","length","prevState"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,aAAnB;AAGA,OAAOC,OAAP,MAAoB,qBAApB;AAEA,OAAOC,QAAP,MAAqB,2BAArB;;AAIA,IAAMC,IAAI,GAAG,SAAPA,IAAO,OAAc;AAAA;;AAAA,MAAXC,IAAW,QAAXA,IAAW;;AAAA,kBACeN,QAAQ,CAAC,CAAC;AAEhDO,IAAAA,QAAQ,EAAE,EAFsC;AAGhDC,IAAAA,OAAO,EAAE;AACPC,MAAAA,QAAQ,EAAE,EADH;AAEPC,MAAAA,QAAQ,EAAE,EAFH;AAGPC,MAAAA,QAAQ,EAAE,EAHH;AAIPC,MAAAA,QAAQ,EAAE,EAJH;AAKPC,MAAAA,QAAQ,EAAE,EALH;AAMPC,MAAAA,QAAQ,EAAE;AANH,KAHuC;AAWhDC,IAAAA,eAAe,EAAE;AACfN,MAAAA,QAAQ,EAAE,EADK;AAEfC,MAAAA,QAAQ,EAAE,EAFK;AAGfC,MAAAA,QAAQ,EAAE,EAHK;AAIfC,MAAAA,QAAQ,EAAE,EAJK;AAKfC,MAAAA,QAAQ,EAAE,EALK;AAMfC,MAAAA,QAAQ,EAAE;AANK;AAX+B,GAAD,CAAD,CADvB;AAAA,MAClBE,YADkB;AAAA,MACJC,eADI;;AAAA,mBAsBiBjB,QAAQ,CAAC,CAAD,CAtBzB;AAAA,MAsBlBkB,aAtBkB;AAAA,MAsBHC,gBAtBG;;AAAA,iBAwBRhB,OAAO,EAxBC;AAAA,MAwBjBiB,IAxBiB,YAwBjBA,IAxBiB;;AA0BzBnB,EAAAA,SAAS,CAAC,YAAM;AAEd,QAAI,CAACmB,IAAI,CAACC,IAAV,EAAgB;AAEd,aAAOnB,MAAM,CAACoB,IAAP,CAAY,OAAZ,CAAP;AAED;;AAAA;AAED,QAAMC,OAAO,GAAGjB,IAAI,CAACkB,GAAL,CAAS,UAAClB,IAAD,EAAOmB,KAAP,EAAiB;AAExC,UAAIA,KAAK,GAAGL,IAAI,CAACM,SAAjB,EAA4B;AAE1B,eAAO;AAELnB,UAAAA,QAAQ,EAAED,IAAI,CAACC,QAFV;AAGLC,UAAAA,OAAO,EAAEF,IAAI,CAACE,OAHT;AAILO,UAAAA,eAAe,EAAET,IAAI,CAACS;AAJjB,SAAP;AAOD;;AAAA;AAEF,KAbe,EAabY,MAba,CAaN,UAAArB,IAAI;AAAA,aAAIA,IAAI,KAAKsB,SAAb;AAAA,KAbE,CAAhB;AAeA,WAAOX,eAAe,CAACM,OAAD,CAAtB;AAGD,GA1BQ,EA0BN,CAACH,IAAD,CA1BM,CAAT;;AA4BA,MAAMS,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AAG5BC,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AAEA,QAAMC,YAAY,GAAGhB,YAAY,CAACiB,MAAb,GAAsB,CAA3C;;AAGA,QAAIf,aAAa,IAAIc,YAArB,EAAmC;AAAE,aAAOb,gBAAgB,CAAC,UAAAe,SAAS;AAAA,eAAIA,SAAS,GAAG,CAAhB;AAAA,OAAV,CAAvB;AAAqD;;AAAA;AAE3F,GAVD;;AAYA,SACE,4BACGJ,OAAO,CAACC,GAAR,CAAYf,YAAZ,CADH,EAGGc,OAAO,CAACC,GAAR,CAAYC,YAAZ,CAHH,EAKE,MAAC,QAAD;AAEE,IAAA,QAAQ,EAAEhB,YAAY,CAACE,aAAD,CAAZ,CAA4BX,QAFxC;AAGE,IAAA,OAAO,EAAES,YAAY,CAACE,aAAD,CAAZ,CAA4BV,OAHvC;AAIE,IAAA,eAAe,EAAEQ,YAAY,CAACE,aAAD,CAAZ,CAA4BH,eAJ/C;AAKE,IAAA,YAAY,EAAEc,eALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,EAeE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfF,CADF;AAgCD,CAlGD;;GAAMxB,I;UAwBaF,O;;;KAxBbE,I;AAmHL;;AAED,eAAeA,IAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Router from 'next/router';\nimport axios from 'axios';\n\nimport useUSer from '../../utils/useUser';\n\nimport Question from '../../components/Question';\n\n\n\nconst Quiz = ({ quiz }) => {\n  const [quizQuestion, setQuizQuestion] = useState([{\n\n    question: '',\n    answers: {\n      answer_a: \"\",\n      answer_b: \"\",\n      answer_c: \"\",\n      answer_d: \"\",\n      answer_e: \"\",\n      answer_f: \"\",\n    },\n    correct_answers: {\n      answer_a: \"\",\n      answer_b: \"\",\n      answer_c: \"\",\n      answer_d: \"\",\n      answer_e: \"\",\n      answer_f: \"\",\n    }\n  }]);\n\n  const [countQuestion, setCountQuestion] = useState(0);\n\n  const { user } = useUSer();\n\n  useEffect(() => {\n\n    if (!user.name) {\n\n      return Router.push('/home');\n\n    };\n\n    const newQuiz = quiz.map((quiz, index) => {\n\n      if (index < user.dificulty) {\n\n        return {\n\n          question: quiz.question,\n          answers: quiz.answers,\n          correct_answers: quiz.correct_answers\n\n        };\n      };\n\n    }).filter(quiz => quiz !== undefined);\n\n    return setQuizQuestion(newQuiz);\n\n\n  }, [user]);\n\n  const handleNextQuest = () => {\n\n\n    console.log('Clicked');\n\n    const maxQuestions = quizQuestion.length - 1;\n\n\n    if (countQuestion <= maxQuestions) { return setCountQuestion(prevState => prevState + 1) };\n\n  };\n\n  return (\n    <>\n      {console.log(quizQuestion)}\n      {/* {console.log(quiz)} */}\n      {console.log(maxQuestions)}\n\n      <Question\n\n        question={quizQuestion[countQuestion].question}\n        answers={quizQuestion[countQuestion].answers}\n        correct_answers={quizQuestion[countQuestion].correct_answers}\n        nextQuestion={handleNextQuest}\n      />\n\n\n\n      <div >\n\n\n        {/* <h1>{quiz[1].question}</h1>\n        <p>{quiz[1].answers.answer_a}</p>\n        <p>{quiz[1].answers.answer_b}</p>\n        <p>{quiz[1].answers.answer_c}</p>\n        <p>{quiz[1].answers.answer_d}</p>\n        <p>{quiz[1].answers.answer_e}</p>\n        <p>{quiz[1].answers.answer_f}</p> */}\n\n\n      </div>\n\n    </>\n  );\n};\n\nexport async function getStaticProps() {\n\n\n  const result = await axios.get('https://quizapi.io/api/v1/questions', {\n\n\n    headers: { 'X-Api-Key': process.env.tokenAPI },\n\n\n\n  });\n\n  const quiz = result.data;\n\n  return { props: { quiz } };\n};\n\nexport default Quiz;"]},"metadata":{},"sourceType":"module"}