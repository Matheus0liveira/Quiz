{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport Router from 'next/router';\nimport useUSer from '../../utils/useUser';\nimport Question from '../../components/Question';\nimport Results from '../../components/Results';\n\nvar Quiz = function Quiz(_ref) {\n  var quiz = _ref.quiz;\n\n  var _useState = useState([{\n    question: '',\n    answers: {\n      answer_a_correct: \"\",\n      answer_b: \"\",\n      answer_c: \"\",\n      answer_d: \"\",\n      answer_e: \"\",\n      answer_f: \"\"\n    },\n    correct_answers: {\n      answer_a: \"\",\n      answer_b: \"\",\n      answer_c: \"\",\n      answer_d: \"\",\n      answer_e: \"\",\n      answer_f: \"\"\n    }\n  }]),\n      quizQuestion = _useState[0],\n      setQuizQuestion = _useState[1];\n\n  var _useState2 = useState(0),\n      countQuestion = _useState2[0],\n      setCountQuestion = _useState2[1];\n\n  var _useState3 = useState(false),\n      showResults = _useState3[0],\n      setShowResults = _useState3[1];\n\n  var _useUSer = useUSer(),\n      user = _useUSer.user;\n\n  useEffect(function () {\n    if (!user.name) {\n      return Router.push('/home');\n    }\n\n    ;\n    var newQuiz = quiz.map(function (quiz, index) {\n      if (index < user.dificulty) {\n        return {\n          question: quiz.question,\n          answers: quiz.answers,\n          correct_answers: quiz.correct_answers\n        };\n      }\n\n      ;\n    }).filter(function (quiz) {\n      return quiz !== undefined;\n    });\n    return setQuizQuestion(newQuiz);\n  }, [user]);\n\n  var handleNextQuest = function handleNextQuest() {\n    countQuestion < quizQuestion.length - 1 ? setCountQuestion(function (prevState) {\n      return prevState + 1;\n    }) : setShowResults(true);\n  };\n\n  return __jsx(React.Fragment, null, console.log(quiz), !showResults ? __jsx(Question, {\n    countQuestion: countQuestion,\n    question: quizQuestion[countQuestion].question,\n    answers: [quizQuestion[countQuestion].answers] // correct_answers={quizQuestion[countQuestion].correct_answers}\n    ,\n    nextQuestion: handleNextQuest\n  }) : __jsx(Results, null), __jsx(\"div\", null));\n};\n\n;\nexport var __N_SSG = true;\nexport default Quiz;","map":null,"metadata":{},"sourceType":"module"}