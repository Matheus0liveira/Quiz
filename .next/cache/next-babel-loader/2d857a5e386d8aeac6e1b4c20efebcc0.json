{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport Router from 'next/router';\nimport axios from 'axios';\nimport useUSer from '../../utils/useUser';\nimport Question from '../../components/Question';\nimport Results from '../../components/Results';\n\nconst Quiz = ({\n  quiz\n}) => {\n  const {\n    0: quizQuestion,\n    1: setQuizQuestion\n  } = useState([{\n    question: '',\n    answers: {\n      answer_a_correct: \"\",\n      answer_b: \"\",\n      answer_c: \"\",\n      answer_d: \"\",\n      answer_e: \"\",\n      answer_f: \"\"\n    },\n    correct_answers: {\n      answer_a: \"\",\n      answer_b: \"\",\n      answer_c: \"\",\n      answer_d: \"\",\n      answer_e: \"\",\n      answer_f: \"\"\n    }\n  }]);\n  const {\n    0: countQuestion,\n    1: setCountQuestion\n  } = useState(0);\n  const {\n    0: showResults,\n    1: setShowResults\n  } = useState(false);\n  const {\n    user\n  } = useUSer();\n  useEffect(() => {\n    if (!user.name) {\n      return Router.push('/home');\n    }\n\n    ;\n    const newQuiz = quiz.map((quiz, index) => {\n      if (index < user.dificulty) {\n        return {\n          question: quiz.question,\n          answers: quiz.answers,\n          correct_answers: quiz.correct_answers\n        };\n      }\n\n      ;\n    }).filter(quiz => quiz !== undefined);\n    return setQuizQuestion(newQuiz);\n  }, [user]);\n\n  const handleNextQuest = () => {\n    countQuestion < quizQuestion.length - 1 ? setCountQuestion(prevState => prevState + 1) : setShowResults(true);\n  };\n\n  return __jsx(React.Fragment, null, console.log(quiz), !showResults ? __jsx(Question, {\n    countQuestion: countQuestion,\n    question: quizQuestion[countQuestion].question,\n    answers: [quizQuestion[countQuestion].answers] // correct_answers={quizQuestion[countQuestion].correct_answers}\n    ,\n    nextQuestion: handleNextQuest\n  }) : __jsx(Results, null), __jsx(\"div\", null));\n};\n\nexport async function getStaticProps() {\n  const {\n    data\n  } = await axios.get('https://quizapi.io/api/v1/questions', {\n    headers: {\n      'X-Api-Key': process.env.tokenAPI\n    }\n  });\n  const newQuiz = data.map(quiz => {\n    return {\n      id: quiz.id,\n      question: quiz.question,\n      answers: [{\n        id: 1,\n        quest: quiz.answers.answer_a\n      }, {\n        id: 2,\n        quest: quiz.answers.answer_b\n      }, {\n        id: 3,\n        quest: quiz.answers.answer_c\n      }, {\n        id: 4,\n        quest: quiz.answers.answer_d\n      }, {\n        id: 5,\n        quest: quiz.answers.answer_e\n      }, {\n        id: 6,\n        quest: quiz.answers.answer_f\n      }].filter(answer => answer.quest !== null),\n      correct_answers: quiz.correct_answers,\n      multiple_correct_answers: quiz.multiple_correct_answers,\n      category: quiz.category\n    };\n  });\n  const quiz = newQuiz;\n  return {\n    props: {\n      quiz\n    }\n  };\n}\n;\nexport default Quiz;","map":null,"metadata":{},"sourceType":"module"}